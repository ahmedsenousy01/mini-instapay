version: "3.8"

services:
  api-gateway:
    env_file:
      - .env
    build:
      context: ../../services/api-gateway
      args:
        - NODE_ENV=staging
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    ports:
      - "4000:4000"
    depends_on:
      - transaction-service
      - reporting-service
      - notification-service
    networks:
      - instapay-net
    environment:
      - NODE_ENV=staging
      - TRANSACTION_SERVICE_URL=http://transaction-service:5001
      - NOTIFICATION_SERVICE_URL=http://notification-service:5002
      - REPORTING_SERVICE_URL=http://reporting-service:5003
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}

  transaction-service:
    env_file:
      - .env
    build:
      context: ../../services/transaction-service
      args:
        - NODE_ENV=staging
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - instapay-net
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=${STAGING_DATABASE_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
    depends_on:
      - postgres-db

  notification-service:
    env_file:
      - .env
    build:
      context: ../../services/notification-service
      args:
        - NODE_ENV=staging
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - instapay-net
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=${STAGING_DATABASE_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
    depends_on:
      - postgres-db

  reporting-service:
    env_file:
      - .env
    build:
      context: ../../services/reporting-service
      args:
        - NODE_ENV=staging
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - instapay-net
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=${STAGING_DATABASE_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
    depends_on:
      - postgres-db

  db-service:
    env_file:
      - .env
    build:
      context: ../../services/db-service
      args:
        - NODE_ENV=staging
    networks:
      - instapay-net
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=${STAGING_DATABASE_URL}
    depends_on:
      - postgres-db

  postgres-db:
    env_file:
      - .env
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_DB=${STAGING_POSTGRES_DB}
      - POSTGRES_USER=${STAGING_POSTGRES_USER}
      - POSTGRES_PASSWORD=${STAGING_POSTGRES_PASSWORD}
    volumes:
      - type: volume
        source: staging-payment-db-data
        target: /var/lib/postgresql/data
    networks:
      - instapay-net
    ports:
      - "5432:5432"

  frontend:
    env_file:
      - .env
    build:
      context: ../../frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=staging
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    ports:
      - "3000:3000"
    networks:
      - instapay-net
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - API_GATEWAY_URL=http://api-gateway:4000
    depends_on:
      - api-gateway

volumes:
  staging-payment-db-data:
    driver: local

networks:
  instapay-net:
    driver: bridge
